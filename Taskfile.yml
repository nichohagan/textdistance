# https://taskfile.dev/
version: "3"

vars:
  PYTHON_BIN: python3
  VENVS: .venvs/
  LINT_ENV: "{{.VENVS}}lint"
  BENCHMARK_ENV: "{{.VENVS}}benchmark"
  TEST_PURE_ENV: "{{.VENVS}}pytest-pure"
  TEST_EXT_ENV: "{{.VENVS}}pytest-ext"

tasks:
  venv:create:
    status:
      - "test -f {{.ENV}}/bin/activate"
    cmds:
      - "{{.PYTHON_BIN}} -m venv {{.ENV}}"
      - "{{.ENV}}/bin/python3 -m pip install -U pip setuptools wheel"
  pip:install:
    sources:
      - setup.py
      - "{{.ENV}}/bin/activate"
    status:
      - test -f {{.ENV}}/bin/flake8
    deps:
      - task: venv:create
        vars:
          ENV: "{{.ENV}}"
    cmds:
      - "{{.ENV}}/bin/pip install '.[{{.EXTRA}}]'"

  lint:install:
    cmds:
      - task: pip:install
        vars:
          ENV: "{{.LINT_ENV}}"
          EXTRA: test,lint

  twine:build:
    deps:
      - lint:install
    cmds:
      - rm -rf dist/
      - "{{.LINT_ENV}}/bin/python3 setup.py sdist bdist_wheel"
  twine:release:
    deps:
      - twine:build
    cmds:
      - "{{.LINT_ENV}}/bin/twine upload dist/textdistance-*"

  flake8:run:
    deps:
      - lint:install
    cmds:
      - "{{.LINT_ENV}}/bin/flake8 ."
  mypy:run:
    deps:
      - lint:install
    cmds:
      - "{{.LINT_ENV}}/bin/mypy"


  pytest-pure:run:
    deps:
      - task: pip:install
        vars:
          ENV: "{{.TEST_PURE_ENV}}"
          EXTRA: test
    cmds:
      - "{{.TEST_PURE_ENV}}/bin/pytest  -m 'not external' {{.CLI_ARGS}}"

  pytest-external:run:
    deps:
      - task: pip:install
        vars:
          ENV: "{{.TEST_EXT_ENV}}"
          EXTRA: test,benchmark
    cmds:
      - "{{.TEST_EXT_ENV}}/bin/pytest {{.CLI_ARGS}}"

  isort:run:
    deps:
      - lint:install
    cmds:
      - "{{.LINT_ENV}}/bin/isort ."

  benchmark:
    deps:
      - task: pip:install
        vars:
          ENV: "{{.BENCHMARK_ENV}}"
          EXTRA: benchmark
    cmds:
      - "{{.BENCHMARK_ENV}}/bin/python3 -m textdistance.benchmark"
